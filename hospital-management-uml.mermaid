classDiagram
    note for User "Authentication & User Management"
    class User {
        -userID: String
        -password: String
        -name: String
        -contactNumber: String
        -email: String
        -role: UserRole
        +login(userID: String, password: String): boolean
        +changePassword(newPassword: String): void
        +updateContactInfo(email: String, phone: String): void
        +performRoleSpecificActions(): void
    }

    class AppointmentManageable {
        <<interface>>
        +acceptAppointment(appointment: Appointment): void
        +declineAppointment(appointment: Appointment): void
        +setAvailability(slots: List~TimeSlot~): void
    }

    class InventoryManageable {
        <<interface>>
        +updateStock(quantity: int): void
        +submitReplenishmentRequest(medicine: Medicine, quantity: int): void
        +approveReplenishmentRequest(request: ReplenishmentRequest): void
    }

    class UserRole {
        <<enumeration>>
        PATIENT
        DOCTOR
        PHARMACIST
        ADMINISTRATOR
    }

    note for Patient "Medical Records & Patient Management"
    class Patient {
        -patientID: String
        -dateOfBirth: Date
        -gender: String
        -bloodType: String
        -medicalHistory: List~MedicalRecord~
        +viewMedicalRecord(): List~MedicalRecord~
        +updatePersonalInfo(contact: String, email: String): void
        +requestAppointment(doctorID: String, timeSlot: TimeSlot): Appointment
        +viewAvailableTimeSlots(doctorID: String): List~TimeSlot~
    }

    class TimeSlot {
        -startTime: DateTime
        -endTime: DateTime
        -isAvailable: boolean
        -doctorID: String
        +isAvailableForBooking(): boolean
        +book(): boolean
        +release(): void
    }

    class AppointmentManager {
        -appointments: List~Appointment~
        +createAppointment(patient: Patient, doctor: Doctor, timeSlot: TimeSlot): Appointment
        +cancelAppointment(appointmentID: String): boolean
        +rescheduleAppointment(appointmentID: String, newTimeSlot: TimeSlot): boolean
        +getAvailableSlots(doctorID: String, date: Date): List~TimeSlot~
        +getDoctorSchedule(doctorID: String): List~Appointment~
        +getPatientAppointments(patientID: String): List~Appointment~
    }

    class MedicalRecord {
        -recordID: String
        -recordDate: Date
        -diagnosis: String
        -treatment: String
        -prescriptions: List~Prescription~
        +addPrescription(prescription: Prescription): void
        +updateDiagnosis(diagnosis: String): void
    }

    class Appointment {
        -appointmentID: String
        -dateTime: Date
        -status: AppointmentStatus
        -patientID: String
        -doctorID: String
        -timeSlot: TimeSlot
        +reschedule(newTimeSlot: TimeSlot): boolean
        +cancel(): void
        +updateStatus(status: AppointmentStatus): void
        +getTimeSlot(): TimeSlot
    }

    class AppointmentStatus {
        <<enumeration>>
        REQUESTED
        CONFIRMED
        CANCELED
        COMPLETED
    }

    class AppointmentOutcomeRecord {
        -appointmentID: String
        -date: Date
        -serviceType: String
        -consultationNotes: String
        -prescriptions: List~Prescription~
        +addPrescription(prescription: Prescription): void
        +updateNotes(notes: String): void
        +setDoctorID(doctorID: String): void
    }

    note for Doctor "Staff Management"
    class Doctor {
        -doctorID: String
        -availability: List~TimeSlot~
        -schedule: List~Appointment~
        +acceptAppointment(appointment: Appointment): void
        +declineAppointment(appointment: Appointment): void
        +setAvailability(slots: List~TimeSlot~): void
        +recordAppointmentOutcome(outcome: AppointmentOutcomeRecord): void
        +getAvailableTimeSlots(date: Date): List~TimeSlot~
        +addTimeSlot(timeSlot: TimeSlot): void
        +removeTimeSlot(timeSlot: TimeSlot): void
    }

    class Pharmacist {
        -pharmacistID: String
        +updatePrescriptionStatus(prescription: Prescription): void
        +submitReplenishmentRequest(medicine: Medicine, quantity: int): void
    }

    class Administrator {
        -adminID: String
        +addStaff(staff: User): void
        +removeStaff(staffID: String): void
        +approveReplenishmentRequest(request: ReplenishmentRequest): void
        +updateMedicineStock(medicine: Medicine, quantity: int): void
        +viewAllAppointments(): List~Appointment~
    }

    class Medicine {
        -medicineID: String
        -name: String
        -currentStock: int
        -lowStockAlert: int
        +updateStock(quantity: int): void
        +isLowStock(): boolean
    }

    class Prescription {
        -prescriptionID: String
        -medicineID: String
        -quantity: int
        -status: PrescriptionStatus
        +updateStatus(status: PrescriptionStatus): void
    }

    class PrescriptionStatus {
        <<enumeration>>
        PENDING
        DISPENSED
        CANCELED
    }

    class ReplenishmentRequest {
        -requestID: String
        -medicineID: String
        -requestedQuantity: int
        -status: RequestStatus
        +approve(): void
        +reject(): void
    }

    User <|-- Patient
    User <|-- Doctor
    User <|-- Pharmacist
    User <|-- Administrator
    User "1" --> "1" UserRole

    Patient "1" --> "*" MedicalRecord
    Patient "1" --> "*" Appointment
    Doctor "1" --> "*" Appointment
    Doctor "1" --> "*" TimeSlot
    Appointment "1" --> "1" TimeSlot
    Appointment "1" --> "0..1" AppointmentOutcomeRecord

    AppointmentManager "1" --> "*" Appointment
    AppointmentManager "1" --> "*" TimeSlot

    AppointmentOutcomeRecord "1" --> "*" Prescription
    Prescription "*" --> "1" Medicine

    Pharmacist "1" --> "*" ReplenishmentRequest
    Administrator "1" --> "*" ReplenishmentRequest
    ReplenishmentRequest "*" --> "1" Medicine
    Prescription "1" --> "1" PrescriptionStatus

    Doctor ..|> AppointmentManageable
    Pharmacist ..|> InventoryManageable
    Administrator ..|> InventoryManageable